buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("pl.allegro.tech.build:axion-release-plugin:${axionReleasePluginVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'uk.co.caeldev'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/releases/"
    }
}

configurations.all {
  // check for updates every build
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


scmVersion {
    tag {
        prefix = 'RELEASE'
    }
}

version = scmVersion.version

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

jar {
    enabled = true
    archivesBaseName = rootProject.name
    group = group
    version = version
    manifest {
        attributes 'Implementation-Title': 'Base Auth2 Server',
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Built-Gradle': gradle.gradleVersion,
                'Main-Class' : 'com.petehouston.greet.Program'
    }
}

bootJar {
    classifier = 'boot'
    mainClassName = 'no.main.application.class'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
    required = { gradle.taskGraph.hasTask("uploadArchives") && !version.endsWith("SNAPSHOT") }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
        html.destination file("${buildDir}/jacoco")
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: "${System.env.ossrhUsername}", password: "${System.env.ossrhPassword}")
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: "${System.env.ossrhUsername}", password: "${System.env.ossrhPassword}")
            }

            //repository(url: "/Users/me/.m2/repository")

            pom.project {

                parent {
                    groupId 'org.springframework.boot'
                    artifactId 'spring-boot-starter-parent'
                    version "${springBootVersion}"
                }

                name 'Base Auth2 Server'
                packaging "jar"

                description "A Library to have a Oauth2 server using mongo db"
                url "https://github.com/caelwinner/base-auth2-server"

                scm {
                    url "https://github.com/caelwinner/base-auth2-server.git"
                    connection "https://github.com/caelwinner/base-auth2-server.git"
                    developerConnection "https://github.com/caelwinner/base-auth2-server.git"
                }

                licenses {
                    license {
                        name "MIT"
                        url "http://opensource.org/licenses/MIT"
                        distribution "repo"
                    }
                }

                developers {
                    developer {
                        id "caelwinner"
                        name "Adolfo Custidiano"
                        email "adolfoecs@gmail.com"
                    }
                }
            }
        }
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security.oauth:spring-security-oauth2"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "uk.co.caeldev:spring-security-mongo:${springSecurityMongoVersion}"
    implementation "uk.co.caeldev:spring-mvc-utils:${springMvcUtilsVersion}"
    implementation "org.apache.commons:commons-lang3:${apacheCommonsLang3Version}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.assertj:assertj-core:${assertjCoreVersion}"
    testImplementation "uk.org.fyodor:fyodor-core:${fyodorVersion}"
    testImplementation "uk.org.fyodor:fyodor-junit:${fyodorVersion}"
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "com.github.tomakehurst:wiremock:${wiremockVersion}"
    testImplementation "com.github.fakemongo:fongo:${fongoVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    testImplementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity4"
}

task wrapper(type: Wrapper) {
    gradleVersion = rootGradleVersion
}
